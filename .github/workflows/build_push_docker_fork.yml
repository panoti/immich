name: Build and Push Docker Image - Fork

on:
  push:
    branches: [dev]
    paths:
      - server/**
      - machine-learning/**
      - web/**
      - nginx/**

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      ml-worker: ${{ steps.filter.outputs.ml-worker }}
      webapp: ${{ steps.filter.outputs.webapp }}
      proxy: ${{ steps.filter.outputs.proxy }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'server/**'
          ml-worker:
            - 'machine-learning/**'
          webapp:
            - 'web/**'
          proxy:
            - 'nginx/**'
  build_and_push_backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Immich Mono Repo
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./server
          file: ./server/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest
  build_and_push_ml_worker:
    needs: changes
    if: ${{ needs.changes.outputs.ml-worker == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Machine Learning
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./machine-learning
          file: ./machine-learning/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ml-worker:latest
  build_and_push_webapp_latest:
    needs: changes
    if: ${{ needs.changes.outputs.webapp == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Web
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./web
          file: ./web/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          target: prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/webapp:latest
  # build_and_push_proxy_latest:
  #   needs: changes
  #   if: ${{ needs.changes.outputs.proxy == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2.0.0
  #     - name: Log into registry ${{ env.REGISTRY }}
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build and Push Proxy
  #       uses: docker/build-push-action@v3.1.1
  #       with:
  #         context: ./nginx
  #         file: ./nginx/Dockerfile
  #         # platforms: linux/arm/v7,linux/amd64,linux/arm64
  #         push: true
  #         tags: |
  #           ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/proxy:latest
