name: Build and Push Docker Image - Fork

on:
  push:
    branches: [dev]
    #paths:
    #  - server/**
    #  - machine-learning/**
    #  - web/**
    #  - nginx/**

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      server: ${{ steps.filter.outputs.server }}
      machine-learning: ${{ steps.filter.outputs.machine-learning }}
      web: ${{ steps.filter.outputs.web }}
      nginx: ${{ steps.filter.outputs.nginx }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          server:
            - 'server/**'
          machine-learning:
            - 'machine-learning/**'
          web:
            - 'web/**'
          nginx:
            - 'nginx/**'

  # This image include both the server and microservices - the two containers can be slitted into separated
  # service with its coressponding entry file.
  build_and_push_server_monorepo_latest:
    needs: changes
    #if: ${{ needs.changes.outputs.server == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Immich Mono Repo
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./server
          file: ./server/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/immich-server:latest
  build_and_push_machine_learning_latest:
    needs: changes
    #if: ${{ needs.changes.outputs.machine-learning == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Machine Learning
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./machine-learning
          file: ./machine-learning/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/immich-machine-learning:latest
  build_and_push_web_latest:
    needs: changes
    #if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Web
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./web
          file: ./web/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          target: prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/immich-web:latest
  build_and_push_nginx_latest:
    needs: changes
    #if: ${{ needs.changes.outputs.nginx == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Proxy
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          # platforms: linux/arm/v7,linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/immich-proxy:latest
